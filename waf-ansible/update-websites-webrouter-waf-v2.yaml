- name: "update-websites-webrouter-waf-v2"
  hosts: localhost
  gather_facts: false
  vars:

    landscapes:
      sandbox:
        WebACLName: websites-webrouter-sandbox-waf-v2-WAF-DGSR10BM5BEK
        WebACLID: 96f3c0af-9e3d-4212-a87d-1cbb56f244be
        Region: us-east-1
        Scope: CLOUDFRONT
        arn: arn:aws:wafv2:us-east-1:847284185857:global/webacl/websites-webrouter-sandbox-waf-v2-WAF-DGSR10BM5BEK/96f3c0af-9e3d-4212-a87d-1cbb56f244be
        WhitelistRule: Allow
        BlacklistRule: Allow
        ReputationListsRule: Block
        BadBotRule: Allow
        # "AWS-AWSManagedRulesCommonRuleSet",
        SqlInjectionRule: Allow
        XssRule: Allow
        ScannersAndProbesRule: Allow
        HttpFloodRateBasedRule: Count


      # test:
      #   name:
      #   id:
      #   arn:
      # prod:
      #   name:
      #   id:
      #   arn:

  tasks:

    - name: Print Selected Landscape Details
      debug:
        msg: "Environment: {{ target_env }}, Name: {{ landscapes[target_env].WebACLName }}, ID: {{ landscapes[target_env].WebACLID }}, ARN: {{ landscapes[target_env].arn }}"
      when: target_env in landscapes

    - name: Adjust webacl json
      ansible.builtin.command: 
        argv:
        - python3
        - adjust-waf.py
        - --WebACLName 
        - "{{ landscapes[target_env].WebACLName }}"
        - --WebACLID 
        - "{{ landscapes[target_env].WebACLID }}"
        - --Scope 
        - "{{ landscapes[target_env].Scope }}"
        - --Region 
        - "{{ landscapes[target_env].Region }}"
        - --WhitelistRule 
        - "{{ landscapes[target_env].WhitelistRule }}"
        - --BlacklistRule 
        - "{{ landscapes[target_env].BlacklistRule }}"
        - --ReputationListsRule 
        - "{{ landscapes[target_env].ReputationListsRule }}"
        - --BadBotRule 
        - "{{ landscapes[target_env].BadBotRule }}"
        - --SqlInjectionRule 
        - "{{ landscapes[target_env].SqlInjectionRule }}"
        - --XssRule 
        - "{{ landscapes[target_env].XssRule }}"
        - --ScannersAndProbesRule 
        - "{{ landscapes[target_env].ScannersAndProbesRule }}"
        - --HttpFloodRateBasedRule 
        - "{{ landscapes[target_env].HttpFloodRateBasedRule }}"
      register: waf_update_result

    - name: Display updated WebACL JSON
      debug:
        var: waf_update_result.stdout | from_json
